
async function loadCSVAndRenderChart() {
    const response = await fetch(`/path-to-your-file/SalesReportbyLocation.csv?t=${new Date().getTime()}`); // Prevent caching
    const data = await response.text();
    const rows = data.split('\n').slice(1); // Skip header row
    
    let salesData = {};
    
    rows.forEach(row => {
        const cols = row.split(',');
        const location = cols[0].trim();
        const mtdSales = parseFloat(cols[1]) || 0;
        const lymtdSales = parseFloat(cols[4]) || 0;
        const ytdSales = parseFloat(cols[8]) || 0;
        const lytdSales = parseFloat(cols[11]) || 0;
        
        salesData[location] = { mtdSales, lymtdSales, ytdSales, lytdSales };
    });
    
    renderChart(salesData);
}


function renderChart(salesData) {
    const locations = Object.keys(salesData);
    const datasets = [
        { label: 'MTD Sales', backgroundColor: 'blue', data: [] },
        { label: 'LY MTD Sales', backgroundColor: 'red', data: [] },
        { label: 'YTD Sales', backgroundColor: 'green', data: [] },
        { label: 'LY YTD Sales', backgroundColor: 'orange', data: [] }
    ];
    
    locations.forEach(loc => {
        datasets[0].data.push(salesData[loc].mtdSales);
        datasets[1].data.push(salesData[loc].lymtdSales);
        datasets[2].data.push(salesData[loc].ytdSales);
        datasets[3].data.push(salesData[loc].lytdSales);
    });
    
    
    const dashboard = document.getElementById('dashboard'); // Ensure this exists
    let chartCanvas = document.getElementById('currentSalesChart');
    if (chartCanvas) {
        chartCanvas.remove(); // Remove existing chart before reloading
    }
    
    const chartContainer = document.createElement('canvas');
    chartContainer.id = 'currentSalesChart';
    dashboard.appendChild(chartContainer);
    
    const ctx = document.getElementById('currentSalesChart').getContext('2d');
    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: locations,
            datasets: datasets
        },
        options: {
            responsive: true,
            scales: {
                x: { stacked: true },
                y: { stacked: false }
            }
        }
    });
}


async function reloadData() {
    await loadCSVAndRenderChart();
}


const reloadButton = document.createElement('button');
reloadButton.id = 'reloadButton';
reloadButton.innerText = 'Reload Data';
reloadButton.onclick = reloadData;

document.getElementById('dashboard').appendChild(reloadButton);


loadCSVAndRenderChart();
